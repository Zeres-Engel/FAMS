version: '3'

services:
  api-nodejs:
    build:
      context: ./backend/NodeJS-services
      dockerfile: Dockerfile.dev
    container_name: fams_api_nodejs
    restart: always
    ports:
      - "3002:3000"
    environment:
      - NODE_ENV=production
    networks:
      - app-network

  api-python:
    build:
      context: ./backend/Python-services
      dockerfile: Dockerfile.dev
    container_name: fams_api_python
    restart: always
    ports:
      - "3001:3001"
    environment:
      - ENVIRONMENT=production
      - PORT=3001
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: fams_frontend
    restart: always
    ports:
      - "3003:3000"
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://localhost:3002/api
      - REACT_APP_PYTHON_API_URL=http://localhost:3001/api
    depends_on:
      - api-nodejs
      - api-python
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: fams_nginx
    restart: always
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/logs:/var/log/nginx
    ports:
      - "80:80"
    depends_on:
      - frontend
      - api-nodejs
      - api-python
    networks:
      - app-network

  # MongoDB for production (optional)
  mongodb:
    image: mongo:latest
    restart: always
    container_name: fams_mongodb
    volumes:
      - mongo_data:/data/db
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD:-changeme}
    networks:
      - app-network

  # MongoDB admin UI (optional)
  mongo-express:
    image: mongo-express:latest
    restart: always
    container_name: fams_mongo_express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_PASSWORD:-changeme}
      - ME_CONFIG_MONGODB_SERVER=mongodb
    depends_on:
      - mongodb
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongo_data: 
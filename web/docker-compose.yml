services:
  api-nodejs:
    build:
      context: ./backend/NodeJS-services
      dockerfile: Dockerfile.dev
    container_name: fams_api_nodejs
    restart: always
    ports:
      - "3002:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - MONGO_URI=mongodb://mongodb:27017/fams
      - JWT_SECRET=your_jwt_secret_key_change_this_in_production
      - REFRESH_TOKEN_SECRET=your_refresh_token_secret_key_change_this_in_production
    volumes:
      - ./backend/NodeJS-services:/app
      - /app/node_modules
    command: npm run dev
    networks:
      - app-network
    depends_on:
      - mongodb

  api-python:
    build:
      context: ./backend/Python-services
      dockerfile: Dockerfile.dev
    container_name: fams_api_python
    restart: always
    ports:
      - "3001:3000"
    environment:
      - ENVIRONMENT=development
      - PORT=3000
      - HOST=0.0.0.0
      - IS_DOCKER=true
      - MONGO_URI=mongodb://mongodb:27017/fams
      - JWT_SECRET=your_jwt_secret_key_change_this_in_production
      - REFRESH_TOKEN_SECRET=your_refresh_token_secret_key_change_this_in_production
    volumes:
      - ./backend/Python-services:/app
    command: python -m uvicorn src.api.app:app --host 0.0.0.0 --port 3000 --reload
    networks:
      - app-network
    depends_on:
      - mongodb

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: fams_frontend
    restart: always
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=/api
      - REACT_APP_PYTHON_API_URL=/api-python
      - WATCHPACK_POLLING=true
      - CHOKIDAR_USEPOLLING=true
      - WDS_SOCKET_PORT=0
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm start
    depends_on:
      - api-nodejs
      - api-python
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: fams_nginx
    restart: always
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/logs:/var/log/nginx
    ports:
      - "8088:80"
    depends_on:
      - frontend
      - api-nodejs
      - api-python
    networks:
      - app-network

  mongodb:
    image: mongo:latest
    restart: always
    container_name: fams_mongodb
    volumes:
      - mongo_data:/data/db
    ports:
      - "27018:27017"
    networks:
      - app-network

  mongo-express:
    image: mongo-express:latest
    restart: always
    container_name: fams_mongo_express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_URL=mongodb://mongodb:27017/
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=pass
    depends_on:
      - mongodb
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongo_data: 